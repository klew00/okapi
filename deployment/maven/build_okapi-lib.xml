<?xml version="1.0"?> 
<project name="okapi-lib" default="all" basedir="."> 

	<!-- Guess the platform if this build file is not called with the platform already set -->
	<condition property="platform" value="win32-x86">
		<os family="windows"/>
	</condition>
	<condition property="platform" value="cocoa-macosx">
		<os family="mac"/>
	</condition>
	<condition property="platform" value="gtk2-linux-x86">
		<os name="Linux" arch="x86"/>
	</condition>
	<condition property="platform" value="gtk2-linux-x86_64">
		<os name="Linux" arch="x86_64"/>
	</condition>

	<!-- Set flags for what dstribution is being built -->
	<condition property="building-windows">
		<equals arg1="${platform}" arg2="win32-x86"/>
	</condition>
	<condition property="building-mac">
		<equals arg1="${platform}" arg2="cacoa-macosx"/>
	</condition>
	<condition property="building-linux">
		<or>
			<equals arg1="${platform}" arg2="gtk2-linux-x86"/>
			<equals arg1="${platform}" arg2="gtk2-linux-x86_64"/>
		</or>
	</condition>

	<!-- Get the version information to use from file -->
	<property file="../shared/release.properties" />

	<property file="libVersions.properties" />
 	
 	<property name="okapilibName" value="okapi-lib"/>
	<property name="okapilibStamp" value="${okapilibVersion}${releaseInfo}" />
	<property name="okapilibJar" value="${okapilibName}-${okapilibStamp}.jar" />

 	<property name="okapilibuiName" value="okapi-lib-ui"/>
	<property name="okapilibuiStamp" value="${okapilibuiVersion}${releaseInfo}" />
	<property name="okapilibuiJar" value="${okapilibuiName}-${okapilibuiStamp}.jar" />

	<property name="tikalStamp" value="${tikalVersion}${releaseInfo}" />
	
 	<property name="tmp" value="tmp"/>
	<property name="dist" value="dist_common"/>
	<property name="done" value="done"/>
	<property name="distLib" value="${dist}/lib"/>
	<property name="distLicenses" value="${distLib}/licenses"/>
	<property name="distLogger" value="${distLib}/logger"/>
	<property name="logBindJar" value="logbind.jar"/>
	<property name="distName" value="${okapilibName}_all-platforms_${okapilibStamp}" />
	<property name="mavenStore" value="${user.home}/.m2/repository"/>

	<tstamp>
	 <format property="TODAY" pattern="MMM-dd-yyyy"/>
	</tstamp>
	
	<target name="init">
		<delete includeEmptyDirs="true" failonerror="false">
			<fileset dir="${dist}"/>
		</delete>
		<mkdir dir="${distLib}"/>
		<mkdir dir="${distLicenses}"/>
		<mkdir dir="${distLogger}"/>
		<mkdir dir="${done}"/>
 	</target>

	<!-- Make the okapi-lib jar -->
	<target name="okapiLib"> 

		<!-- Prepare tmp dir for creating the jar -->
		<delete includeEmptyDirs="true" failonerror="false">
			<fileset dir="${tmp}"/>
		</delete>
		<delete file="tmpJars" quiet="true"/>
		<mkdir dir="${tmp}"/>

		<!-- Copy classes -->
		<copy todir="${tmp}">
			<!-- core -->
			<fileset dir="../../okapi/core/target/classes"
			 excludes="**/META-INF/**"/>
			 
			<!-- filters -->
			<fileset dir="../../okapi/filters/abstractmarkup/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/filters/dtd/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/filters/html/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/filters/idml/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/filters/json/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/filters/mif/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/filters/mosestext/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/filters/openoffice/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/filters/openxml/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/filters/pensieve/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/filters/plaintext/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/filters/po/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/filters/php/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/filters/properties/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/filters/regex/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/filters/railsyaml/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/filters/rtf/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/filters/table/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/filters/tmx/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/filters/ttx/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/filters/ts/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/filters/versifiedtxt/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/filters/doxygen/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/filters/wiki/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/filters/vignette/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/filters/xliff/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/filters/xmlstream/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/filters/rainbowkit/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/filters/transifex/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/filters/archive/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/filters/xini/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/filters/txml/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/filters/transtable/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/filters/its/target/classes"
			 excludes="**/META-INF/**"/>
			 
			<!-- lib -->
			<fileset dir="../../okapi/libraries/lib-segmentation/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/libraries/lib-translation/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/libraries/lib-extra/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/libraries/lib-search/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/libraries/lib-verification/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/libraries/lib-terminology/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/libraries/lib-reporting/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/libraries/lib-transifex/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/libraries/lib-gtt/target/classes"
			 excludes="**/META-INF/**"/>
			
			<!-- tm -->
			<fileset dir="../../okapi/tm/simpletm/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/tm/pensieve/target/classes"
			 excludes="**/META-INF/**"/>

			<!-- connectors -->
			<fileset dir="../../okapi/connectors/opentran/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/connectors/simpletm/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/connectors/pensieve/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/connectors/translatetoolkit/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/connectors/globalsight/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/connectors/mymemory/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/connectors/google/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/connectors/apertium/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/connectors/microsoft/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/connectors/tda/target/classes"
			 excludes="**/META-INF/**"/>

			 <!-- steps -->
			<fileset dir="../../okapi/steps/bomconversion/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/steps/charlisting/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/steps/codeshandling/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/steps/common/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/steps/diffleverage/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/steps/encodingconversion/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/steps/external-command/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/steps/fullwidthconversion/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/steps/formatconversion/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/steps/generatesimpletm/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/steps/idbasedaligner/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/steps/imagemodification/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/steps/linebreakconversion/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/steps/moses/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/steps/qualitycheck/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/steps/rtfconversion/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/steps/searchandreplace/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/steps/aligner/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/steps/segmentation/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/steps/leveraging/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/steps/textmodification/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/steps/tokenization/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/steps/termextraction/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/steps/translationcomparison/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/steps/uriconversion/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/steps/wordcount/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/steps/xsltransform/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/steps/xmlvalidation/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/steps/xliffsplitter/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/steps/scopingreport/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/steps/rainbowkit/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/steps/gttbatchtranslation/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/steps/msbatchtranslation/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/steps/repetitionanalysis/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/steps/enrycher/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/steps/cleanup/target/classes"
			 excludes="**/META-INF/**"/>
		</copy>
		
		<!-- Copy lib dependencies -->
		<echo file="tmpJars">okapilibCP=</echo>
		
		<property name="dep001" value="${mavenStore}/dtdparser/dtdparser/${dtdparser.dtdparser.version}"/>
		<fileset id="list.contents" dir="${dep001}" includes="**/dtdparser-${dtdparser.dtdparser.version}.jar"/>
		<property name="jar001" refid="list.contents"/>
		<echo file="tmpJars" append="yes">${jar001}</echo>
		<copy todir="${distLib}" file="${dep001}/${jar001}"/>
		<copy todir="${distLicenses}">
		   <fileset dir="../shared/licenses" includes="**/dtdparser-*"/>
		</copy>

		<property name="dep002" value="${mavenStore}/net/htmlparser/jericho/jericho-html/${net.htmlparser.jericho.jericho-html.version}"/>
		<fileset id="list.contents" dir="${dep002}" includes="**/jericho-html-${net.htmlparser.jericho.jericho-html.version}.jar"/>
		<property name="jar002" refid="list.contents"/>
		<echo file="tmpJars" append="yes"> ${jar002}</echo>
		<copy todir="${distLib}" file="${dep002}/${jar002}"/>
		<copy todir="${distLicenses}">
		   <fileset dir="../shared/licenses" includes="**/jericho-*"/>
		</copy>

		<property name="dep003" value="${mavenStore}/org/yaml/snakeyaml/${org.yaml.snakeyaml.version}"/>
		<fileset id="list.contents" dir="${dep003}"
		 includes="**/snakeyaml-${org.yaml.snakeyaml.version}.jar"/>
		<property name="jar003" refid="list.contents"/>
		<echo file="tmpJars" append="yes"> ${jar003}</echo>
		<copy todir="${distLib}" file="${dep003}/${jar003}"/>
		<copy todir="${distLicenses}">
		   <fileset dir="../shared/licenses" includes="**/snakeyaml-*"/>
		</copy>

		<property name="dep005bis" value="${mavenStore}/com/h2database/h2/${com.h2database.h2.version}"/>
		<fileset id="list.contents" dir="${dep005bis}"
		 includes="**/h2-${com.h2database.h2.version}.jar"/>
		<property name="jar005bis" refid="list.contents"/>
		<echo file="tmpJars" append="yes"> ${jar005bis}</echo>
		<copy todir="${distLib}" file="${dep005bis}/${jar005bis}"/>
		<copy todir="${distLicenses}">
		   <fileset dir="../shared/licenses" includes="**/h2-*"/>
		</copy>

		<property name="dep009" value="${mavenStore}/com/googlecode/json-simple/json-simple/${com.googlecode.json-simple.json-simple.version}"/>
		<fileset id="list.contents" dir="${dep009}"
		 includes="**/json-simple-${com.googlecode.json-simple.json-simple.version}.jar"/>
		<property name="jar009" refid="list.contents"/>
		<echo file="tmpJars" append="yes"> ${jar009}</echo>
		<copy todir="${distLib}" file="${dep009}/${jar009}"/>
		<copy todir="${distLicenses}">
		   <fileset dir="../shared/licenses" includes="**/json-simple-*"/>
		</copy>

		<property name="dep010" value="${mavenStore}/commons-discovery/commons-discovery/${commons-discovery.commons-discovery.version}"/>
		<fileset id="list.contents" dir="${dep010}"
		 includes="**/commons-discovery-${commons-discovery.commons-discovery.version}.jar"/>
		<property name="jar010" refid="list.contents"/>
		<echo file="tmpJars" append="yes"> ${jar010}</echo>
		<copy todir="${distLib}" file="${dep010}/${jar010}"/>
		<!-- + -->
		<property name="dep011" value="${mavenStore}/commons-logging/commons-logging/${commons-logging.commons-logging.version}"/>
		<fileset id="list.contents" dir="${dep011}"
		 includes="**/commons-logging-${commons-logging.commons-logging.version}.jar"/>
		<property name="jar011" refid="list.contents"/>
		<echo file="tmpJars" append="yes"> ${jar011}</echo>
		<copy todir="${distLib}" file="${dep011}/${jar011}"/>
		<copy todir="${distLicenses}">
		   <fileset dir="../shared/licenses" includes="**/commons-*"/>
		</copy>
		
		<property name="dep012" value="${mavenStore}/org/apache/axis/axis/${org.apache.axis.version}"/>
		<fileset id="list.contents" dir="${dep012}"
		 includes="**/axis-${org.apache.axis.version}.jar"/>
		<property name="jar012" refid="list.contents"/>
		<echo file="tmpJars" append="yes"> ${jar012}</echo>
		<copy todir="${distLib}" file="${dep012}/${jar012}"/>
		<!-- + -->
		<property name="dep013" value="${mavenStore}/org/apache/axis/axis-jaxrpc/${org.apache.axis.version}"/>
		<fileset id="list.contents" dir="${dep013}"
		 includes="**/axis-jaxrpc-${org.apache.axis.version}.jar"/>
		<property name="jar013" refid="list.contents"/>
		<echo file="tmpJars" append="yes"> ${jar013}</echo>
		<copy todir="${distLib}" file="${dep013}/${jar013}"/>
		<!-- + -->
		<property name="dep014" value="${mavenStore}/org/apache/axis/axis-saaj/${org.apache.axis.version}"/>
		<fileset id="list.contents" dir="${dep014}"
		 includes="**/axis-saaj-${org.apache.axis.version}.jar"/>
		<property name="jar014" refid="list.contents"/>
		<echo file="tmpJars" append="yes"> ${jar014}</echo>
		<copy todir="${distLib}" file="${dep014}/${jar014}"/>
		<!-- + -->
		<property name="dep015" value="${mavenStore}/axis/axis-wsdl4j/${axis.axis-wsdl4j.version}"/>
		<fileset id="list.contents" dir="${dep015}"
		 includes="**/axis-wsdl4j-${axis.axis-wsdl4j.version}.jar"/>
		<property name="jar015" refid="list.contents"/>
		<echo file="tmpJars" append="yes"> ${jar015}</echo>
		<copy todir="${distLib}" file="${dep015}/${jar015}"/>
		<copy todir="${distLicenses}">
		   <fileset dir="../shared/licenses" includes="**/axis-*"/>
		</copy>

		<property name="dep018" value="${mavenStore}/org/apache/lucene/lucene-core/${org.apache.lucene.lucene-core.version}"/>
		<fileset id="list.contents" dir="${dep018}"
		 includes="**/lucene-core-${org.apache.lucene.lucene-core.version}.jar"/>
		<property name="jar018" refid="list.contents"/>
		<echo file="tmpJars" append="yes"> ${jar018}</echo>
		<copy todir="${distLib}" file="${dep018}/${jar018}"/>

		<property name="dep020" value="${mavenStore}/com/ibm/icu/icu4j/${com.ibm.icu.icu4j.version}"/>
		<fileset id="list.contents" dir="${dep020}"
		 includes="**/icu4j-${com.ibm.icu.icu4j.version}.jar"/>
		<property name="jar020" refid="list.contents"/>
		<echo file="tmpJars" append="yes"> ${jar020}</echo>
		<copy todir="${distLib}" file="${dep020}/${jar020}"/>
		<copy todir="${distLicenses}">
		   <fileset dir="../shared/licenses" includes="**/icu4j-*"/>
		</copy>

		<property name="dep021" value="${mavenStore}/net/sf/trove4j/trove4j/${net.sf.trove4j.trove4j.version}"/>
		<fileset id="list.contents" dir="${dep021}"
		 includes="**/trove4j-${net.sf.trove4j.trove4j.version}.jar"/>
		<property name="jar021" refid="list.contents"/>
		<echo file="tmpJars" append="yes"> ${jar021}</echo>
		<copy todir="${distLib}" file="${dep021}/${jar021}"/>
		<copy todir="${distLicenses}">
		   <fileset dir="../shared/licenses" includes="**/trove*"/>
		</copy>
		
		<property name="dep022" value="${mavenStore}/org/apache/commons/commons-exec/${org.apache.commons.commons-exec.version}"/>
		<fileset id="list.contents" dir="${dep022}"
		 includes="**/commons-exec-${org.apache.commons.commons-exec.version}.jar"/>
		<property name="jar022" refid="list.contents"/>
		<echo file="tmpJars" append="yes"> ${jar022}</echo>
		<copy todir="${distLib}" file="${dep022}/${jar022}"/>
		<copy todir="${distLicenses}">
		   <fileset dir="../shared/licenses" includes="**/commons-*"/>
		</copy>

		<property name="dep023" value="${mavenStore}/org/codehaus/woodstox/woodstox-core-lgpl/${org.codehaus.woodstox.woodstox-core-lgpl.version}"/>
		<fileset id="list.contents" dir="${dep023}"
		 includes="**/woodstox-core-lgpl-${org.codehaus.woodstox.woodstox-core-lgpl.version}.jar"/>
		<property name="jar023" refid="list.contents"/>
		<echo file="tmpJars" append="yes"> ${jar023}</echo>
		<copy todir="${distLib}" file="${dep023}/${jar023}"/>
		<copy todir="${distLicenses}">
		   <fileset dir="../shared/licenses" includes="**/woodstox-*"/>
		</copy>
		<!-- + -->
		<property name="dep024" value="${mavenStore}/org/codehaus/woodstox/stax2-api/${org.codehaus.woodstox.stax2-api.version}"/>
		<fileset id="list.contents" dir="${dep024}"
		 includes="**/stax2-api-${org.codehaus.woodstox.stax2-api.version}.jar"/>
		<property name="jar024" refid="list.contents"/>
		<echo file="tmpJars" append="yes"> ${jar024}</echo>
		<copy todir="${distLib}" file="${dep024}/${jar024}"/>

		<property name="dep025" value="${mavenStore}/net/sf/okapi/lib/okapi-lib-xliff/${net.sf.okapi.lib.okapi-lib-xliff.version}"/>
		<fileset id="list.contents" dir="${dep025}"
		 includes="**/okapi-lib-xliff-${net.sf.okapi.lib.okapi-lib-xliff.version}.jar"/>
		<property name="jar025" refid="list.contents"/>
		<echo file="tmpJars" append="yes"> ${jar025}</echo>
		<copy todir="${distLib}" file="${dep025}/${jar025}"/>

		<property name="dep026" value="${mavenStore}/org/apache/httpcomponents/httpclient/${org.apache.httpcomponents.version}"/>
		<fileset id="list.contents" dir="${dep026}"
		 includes="**/httpclient-${org.apache.httpcomponents.version}.jar"/>
		<property name="jar026" refid="list.contents"/>
		<echo file="tmpJars" append="yes"> ${jar026}</echo>
		<copy todir="${distLib}" file="${dep026}/${jar026}"/>
		<!-- TODO<copy todir="${distLicenses}">
		   <fileset dir="../shared/licenses" includes="**/commons-*"/>
		</copy>-->
		<!--+-->
		<property name="dep027" value="${mavenStore}/org/apache/httpcomponents/httpcore/${org.apache.httpcomponents.version}"/>
		<fileset id="list.contents" dir="${dep027}"
		 includes="**/httpcore-${org.apache.httpcomponents.version}.jar"/>
		<property name="jar027" refid="list.contents"/>
		<echo file="tmpJars" append="yes"> ${jar027}</echo>
		<copy todir="${distLib}" file="${dep027}/${jar027}"/>
		<!--+-->
		<property name="dep028" value="${mavenStore}/org/apache/httpcomponents/httpmime/${org.apache.httpcomponents.version}"/>
		<fileset id="list.contents" dir="${dep028}"
		 includes="**/httpmime-${org.apache.httpcomponents.version}.jar"/>
		<property name="jar028" refid="list.contents"/>
		<echo file="tmpJars" append="yes"> ${jar028}</echo>
		<copy todir="${distLib}" file="${dep028}/${jar028}"/>		

		<property name="dep029" value="${mavenStore}/nu/validator/htmlparser/htmlparser/${nu.validator.htmlparser.htmlparser.version}"/>
		<fileset id="list.contents" dir="${dep029}"
		 includes="**/htmlparser-${nu.validator.htmlparser.htmlparser.version}.jar"/>
		<property name="jar029" refid="list.contents"/>
		<echo file="tmpJars" append="yes"> ${jar029}</echo>
		<copy todir="${distLib}" file="${dep029}/${jar029}"/>

		<!-- This is the logging part -->
		<property name="depSlf4jApi" value="${mavenStore}/org/slf4j/slf4j-api/${org.slf4j.version}"/>
		<fileset id="list.contents" dir="${depSlf4jApi}" includes="**/slf4j-api-${org.slf4j.version}.jar"/>
		<property name="jarSlf4jApi" refid="list.contents"/>
		<echo file="tmpJars" append="yes"> ${jarSlf4jApi}</echo>
		<copy todir="${distLib}" file="${depSlf4jApi}/${jarSlf4jApi}"/>
		<echo file="tmpJars" append="yes"> logger/${logBindJar}</echo>

		<!-- Create the manifest file -->		<property file="tmpJars"/>
		<copy todir="${tmp}/META-INF">
			<fileset dir="data/okapi-lib" includes="**/*.txt"/>
		</copy>
		<manifest file="${tmp}/MANIFEST.MF">
			<attribute name="Implementation-Title" value="${okapilibName}"/>
			<attribute name="Implementation-Version" value="${okapilibStamp}"/>
			<attribute name="Class-Path" value=". ${okapilibCP}"/>
  		</manifest>
		
		<!-- Create the jar file -->
		<jar jarfile="${distLib}/${okapilibJar}" basedir="${tmp}"
		 manifest="${tmp}/MANIFEST.MF"
		 excludes="MANIFEST.MF" />

		<!-- Create directory for dropins -->
		<mkdir dir="${dist}/dropins"/>

		<!-- Copy examples -->
		<copy todir="${dist}/examples">
			<fileset dir="../../okapi/examples/java">
				<exclude name="**/.*"/>
				<exclude name="**/.*/**"/>
				<exclude name="**/target/classes/**"/>
				<exclude name="**/target/maven-archiver/**"/>
			</fileset>
		</copy>
		<!-- Delete normal pom file -->
		<delete file="${dist}/examples/pom.xml" quiet="true"/>
		<!-- And replace it with the one for deployment -->
		<rename src="${dist}/examples/pomForDeployment.xml" dest="${dist}/examples/pom.xml"/>
		
		<replace file="${dist}/examples/pom.xml" token="@version@" value="${okapilibStamp}"/>
		<replace file="${dist}/examples/build_examples.bat" token="@version@" value="${okapilibStamp}"/>
		<replace file="${dist}/examples/build_examples.sh" token="@version@" value="${okapilibStamp}"/>
		<replace file="${dist}/examples/run_examples.bat" token="@version@" value="${okapilibStamp}"/>
		<replace file="${dist}/examples/run_examples.sh" token="@version@" value="${okapilibStamp}"/>

		<!-- Copy config -->
		<copy todir="${dist}/config">
			<fileset dir="../shared/config">
			</fileset>
		</copy>

		<!-- Copy help
		<copy todir="${dist}/help">
			<fileset dir="../../help">
				<exclude name="**/applications/**"/>
				<exclude name="**/common/**"/>
				<exclude name="**/filters/**"/>
				<exclude name="**/lib/**"/>
				<exclude name="**/steps/**"/>
				<exclude name="**/tutorials/**"/>
			</fileset>
		</copy>-->

		<!-- locaweb -->
		<copy todir="${dist}/localweb/devguide">
			<fileset dir="../../website/devguide">
				<exclude name="**/_*"/>
				<exclude name="**/.*"/>
			</fileset>
		</copy>
		<copy todir="${dist}/localweb" file="../../website/okapi.css"/>
		<!-- javadoc files -->
		<property name="depOpennlp-toolsBind" value="${mavenStore}/org/apache/opennlp/opennlp-tools/${org.apache.opennlp.opennlp-tools.version}"/>		
		<property name="depOpennlp-maxentBind" value="${mavenStore}/org/apache/opennlp/opennlp-maxent/${org.apache.opennlp.opennlp-maxent.version}"/>		
		<javadoc destdir="${dist}/localweb/javadoc" Encoding="UTF-8" packagenames="net.sf.okapi.*">
			<classpath>
				<pathelement path="${depSlf4jApi}/${jarSlf4jApi}"/>
				<pathelement path="${dep020}/${jar020}"/>
				<pathelement path="${depOpennlp-toolsBind}/opennlp-tools-${org.apache.opennlp.opennlp-tools.version}.jar"/>
				<pathelement path="${depOpennlp-maxentBind}/opennlp-maxent-${org.apache.opennlp.opennlp-maxent.version}.jar"/>				
			</classpath>
			<packageset dir="../../okapi/core/src/main/java" defaultexcludes="yes"/>
			<packageset dir="../../okapi/libraries/lib-segmentation/src/main/java" defaultexcludes="yes"/>
			<packageset dir="../../okapi/libraries/lib-translation/src/main/java" defaultexcludes="yes"/>
		</javadoc>

	</target>

	<!-- Make Tikal -->
	<target name="tikal">
		<!-- Prepare tmp dir for creating the jar -->
		<delete includeEmptyDirs="true" failonerror="false">
			<fileset dir="${tmp}"/>
		</delete>
		<mkdir dir="${tmp}"/>

		<!-- Copy classes -->
		<copy todir="${tmp}">
			<fileset dir="../../okapi/tikal/target/classes"/>
		</copy>
		
		<!-- Create the manifest file -->
		<manifest file="${tmp}/MANIFEST.MF">
			<attribute name="Implementation-Title" value="tikal"/>
			<attribute name="Implementation-Version" value="${tikalStamp}"/>
			<attribute name="Main-Class" value="net.sf.okapi.applications.tikal.Main"/>
			<!-- Note the reference to the UI library to allow access to parameters editors
			when the tool is used in the UI-enabled distribution -->
			<attribute name="Class-Path" value="${okapilibJar} ${okapilibuiJar}"/>
  		</manifest>
		
		<!-- Create the jar file -->
		<jar jarfile="${distLib}/tikal.jar" basedir="${tmp}"
		 manifest="${tmp}/MANIFEST.MF"
		 excludes="MANIFEST.MF" />

		<!-- Copy batch/shell -->
		<copy todir="${dist}">
			<fileset dir="data/okapi-lib" includes="**/tikal*"/>
			<fileset dir="data/okapi-lib" includes="**/startTikal*"/>
		</copy>

		<!-- Update and copy change log and readme -->
		<copy todir="${dist}" file="../shared/changes.html"/>
		<replace file="${dist}/changes.html" token="@date@" value="${TODAY}"/>
		<copy todir="${dist}" file="data/okapi-lib/readme.html"/>
		<replace file="${dist}/readme.html" token="@version@" value="${okapilibStamp}"/>
		<replace file="${dist}/readme.html" token="@date@" value="${TODAY}"/>
		
		<!-- Clean up -->
		<delete includeEmptyDirs="true" failonerror="false">
			<fileset dir="${tmp}"/>
		</delete>
		<delete file="tmpJars" quiet="true"/>

	</target>

	<target name="logbind-jdk">
		<!-- Copies the logger files needed to bind slf4j with jdk -->
		<!-- None of these jars should be in tmpJars (to go in classpath) -->

		<!-- our binder (log4j-<okapi_ver>.jar) as ${logBindJar} -->
		<copy file="${mavenStore}/net/sf/okapi/logbind/build-jdk14/${okapilibStamp}/build-jdk14-${okapilibStamp}.jar"
		      tofile="${distLogger}/${logBindJar}" />

		<!-- slf4j-jdk14-<ver>.jar -->
		<property name="depSlf4jBind" value="${mavenStore}/org/slf4j/slf4j-jdk14/${org.slf4j.version}"/>
		<fileset id="list.contents" dir="${depSlf4jBind}" includes="**/slf4j-jdk14-${org.slf4j.version}.jar"/>
		<property name="jarSlf4jBind" refid="list.contents"/>
		<copy todir="${distLogger}" file="${depSlf4jBind}/${jarSlf4jBind}"/>
	</target>

	<target name="logbind-log4j">
		<!-- Copies the logger files to bind with log4j -->
		<!-- None of these jars should be in tmpJars (to go in classpath) -->

		<!-- slf4j-log4j12-<ver>.jar -->
		<property name="depSlf4jBind" value="${mavenStore}/org/slf4j/slf4j-log4j12/${org.slf4j.version}"/>
		<fileset id="list.contents" dir="${depSlf4jBind}" includes="**/*.jar"/>
		<property name="jarSlf4jBind" refid="list.contents"/>
		<copy todir="${distLogger}" file="${depSlf4jBind}/${jarSlf4jBind}"/>

		<!-- log4j-<ver>.jar -->
		<property name="depLog4J" value="${mavenStore}/log4j/log4j/${log4j.log4j.version}"/>
		<fileset id="list.contents" dir="${depLog4J}" includes="**/log4j-${log4j.log4j.version}.jar"/>
		<property name="jarLog4J" refid="list.contents"/>
		<copy todir="${distLogger}" file="${depLog4J}/${jarLog4J}"/>

		<!-- our binder (log4j-<okapi_ver>.jar) as ${logBindJar}, with log4j.properties removed from inside -->
		<zip destfile="${distLogger}/${logBindJar}">
			<zipfileset src="${mavenStore}/net/sf/okapi/logbind/build-log4j/${okapilibStamp}/build-log4j-${okapilibStamp}.jar">
				<exclude name="log4j.properties"/>
			</zipfileset>
		</zip>
		<!-- Our "deployment" log4j.properties (could unzip from ${logBindJar}, but we want it to be different that the build one) -->
		<copy todir="${distLogger}" file="../shared/logger/log4j.properties"/>

	</target>
		
	<target name="zip">
		<zip destfile="${done}/${distName}.zip">
			<zipfileset filemode="755" dir="${dist}">
				<include name="**/*.sh"/>
			</zipfileset>
			<zipfileset dir="${dist}">
				<exclude name="**/*.sh"/>
			</zipfileset>
		</zip>
	</target>

	<target name="all" depends="init, okapiLib, logbind-jdk, tikal, zip"/>

</project>
